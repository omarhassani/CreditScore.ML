// This file was auto-generated by ML.NET Model Builder. 
using Microsoft.ML;
using Microsoft.ML.Data;
using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
namespace CreditScore_ML
{
    public partial class MLModel1
    {
        /// <summary>
        /// model input class for MLModel1.
        /// </summary>
        #region model input class
        public class ModelInput
        {
            [ColumnName(@"Type of fund")]
            public float Type_of_fund { get; set; }

            [ColumnName(@"Lifetime")]
            public float Lifetime { get; set; }

            [ColumnName(@"World private equity")]
            public float World_private_equity { get; set; }

            [ColumnName(@"Log World private equity")]
            public float Log_World_private_equity { get; set; }

            [ColumnName(@"Gross annual MSCI return")]
            public float Gross_annual_MSCI_return { get; set; }

            [ColumnName(@"GDP Germany")]
            public float GDP_Germany { get; set; }

            [ColumnName(@"GPD US")]
            public float GPD_US { get; set; }

            [ColumnName(@"Germany interest rate")]
            public float Germany_interest_rate { get; set; }

            [ColumnName(@"US interest rate")]
            public float US_interest_rate { get; set; }

            [ColumnName(@"Fund size")]
            public float Fund_size { get; set; }

            [ColumnName(@"Log fund size")]
            public float Log_fund_size { get; set; }

            [ColumnName(@"Geography focus")]
            public float Geography_focus { get; set; }

            [ColumnName(@"Region fund manager")]
            public float Region_fund_manager { get; set; }

            [ColumnName(@"Diversification")]
            public float Diversification { get; set; }

            [ColumnName(@"Industry focus")]
            public float Industry_focus { get; set; }

            [ColumnName(@"Assets under the manager")]
            public float Assets_under_the_manager { get; set; }

            [ColumnName(@"Cash multiple")]
            public float Cash_multiple { get; set; }

        }

        #endregion

        /// <summary>
        /// model output class for MLModel1.
        /// </summary>
        #region model output class
        public class ModelOutput
        {
            [ColumnName(@"Type of fund")]
            public float Type_of_fund { get; set; }

            [ColumnName(@"Lifetime")]
            public float Lifetime { get; set; }

            [ColumnName(@"World private equity")]
            public float World_private_equity { get; set; }

            [ColumnName(@"Log World private equity")]
            public float Log_World_private_equity { get; set; }

            [ColumnName(@"Gross annual MSCI return")]
            public float Gross_annual_MSCI_return { get; set; }

            [ColumnName(@"GDP Germany")]
            public float GDP_Germany { get; set; }

            [ColumnName(@"GPD US")]
            public float GPD_US { get; set; }

            [ColumnName(@"Germany interest rate")]
            public float Germany_interest_rate { get; set; }

            [ColumnName(@"US interest rate")]
            public float US_interest_rate { get; set; }

            [ColumnName(@"Fund size")]
            public float Fund_size { get; set; }

            [ColumnName(@"Log fund size")]
            public float Log_fund_size { get; set; }

            [ColumnName(@"Geography focus")]
            public float Geography_focus { get; set; }

            [ColumnName(@"Region fund manager")]
            public float Region_fund_manager { get; set; }

            [ColumnName(@"Diversification")]
            public float Diversification { get; set; }

            [ColumnName(@"Industry focus")]
            public float Industry_focus { get; set; }

            [ColumnName(@"Assets under the manager")]
            public float Assets_under_the_manager { get; set; }

            [ColumnName(@"Cash multiple")]
            public float Cash_multiple { get; set; }

            [ColumnName(@"Features")]
            public float[] Features { get; set; }

            [ColumnName(@"Score")]
            public float Score { get; set; }

        }

        #endregion

        private static string MLNetModelPath = Path.GetFullPath("MLModel1.zip");

        public static readonly Lazy<PredictionEngine<ModelInput, ModelOutput>> PredictEngine = new Lazy<PredictionEngine<ModelInput, ModelOutput>>(() => CreatePredictEngine(), true);

        /// <summary>
        /// Use this method to predict on <see cref="ModelInput"/>.
        /// </summary>
        /// <param name="input">model input.</param>
        /// <returns><seealso cref=" ModelOutput"/></returns>
        public static ModelOutput Predict(ModelInput input)
        {
            var predEngine = PredictEngine.Value;
            return predEngine.Predict(input);
        }

        private static PredictionEngine<ModelInput, ModelOutput> CreatePredictEngine()
        {
            var mlContext = new MLContext();
            ITransformer mlModel = mlContext.Model.Load(MLNetModelPath, out var _);
            return mlContext.Model.CreatePredictionEngine<ModelInput, ModelOutput>(mlModel);
        }
    }
}
